<!-- A "project" describes a set of targets that may be requested
     when Ant is executed.  The "default" attribute defines the
     target which is executed if no specific target is requested,
     and the "basedir" attribute defines the current working directory
     from which Ant executes the requested task.  This is normally
     set to the current working directory.
-->

<project name="servlets" default="deploy" basedir=".">
  <property name="build.home" value="build_servlets"/>

    <property name="cab.name" value="robo.cab"/>
    <property name="cabs.name" value="robos.cab"/>
    <property name="jar.name" value="robo.jar"/>
    <property name="build.home" value="build_server"/>
    <property name="build.src" value="${build.home}/src"/>
    <property name="build.classes" value="${build.home}/classes"/>
    <property name="dist.dir" value="../distribution"/>
    <property name="dist.web" value="${dist.dir}/share"/>
    <property name="jar.dir" value="${build.home}/jarfiles"/>

    <property name="servlet.jar" value="C:\java\jakarta\tomcat-4.0.6\common\lib\servlet.jar"/>

<!--

  These properties control option settings on the Javac compiler when it
  is invoked using the <javac> task.

  compile.debug        Should compilation include the debug option?

  compile.deprecation  Should compilation include the deprecation option?

  compile.optimize     Should compilation include the optimize option?

-->

  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize"    value="true"/>


    <!-- This is the target for building a web app -->
    <target name="compile" depends="prepare">
        <copy todir="${build.src}">
		<fileset dir="src">
			<patternset >
				<include name="**/com/iborg/share/"/>
				<include name="**/com/iborg/net/*"/>
				<include name="**/com/iborg/hsocket/*"/>
				<include name="**/com/iborg/util/*"/>
			</patternset> 
		</fileset>
        </copy>
        <javac srcdir="${build.src}" destdir="${build.classes}" debug="${compile.debug}" optimize="${compile.optimize}" deprecation="${compile.deprecation}" classpath="${servlet.jar}"/>
    </target>

    <target name="deploy" depends="compile">
        <copy todir="${dist.web}/WEB-INF">
		<fileset dir="${build.home}">
			<patternset >
				<include name="**/*.class"/>
			</patternset> 
		</fileset>
        </copy>
    </target>

<!-- ==================== Clean Target ==================================== -->

<!--

  The "clean" target deletes any previous "build" and "dist" directory,
  so that you can be ensured the application can be built from scratch.

-->
    <target name="clean" >
    <delete dir="${build.home}"/>
    </target>

<!-- ==================== Prepare Target ================================== -->

<!--

  The "prepare" target is used to create the "build" destination directory,
  and copy the static contents of your web application to it.  If you need
  to copy static files from external dependencies, you can customize the
  contents of this task.

  Normally, this task is executed indirectly when needed.

-->

  <target name="prepare">

    <!-- Create build directory and copy static content -->
    <mkdir  dir="${build.home}"/>
    <mkdir  dir="${build.src}"/>
    <mkdir  dir="${build.classes}"/>

  </target>

</project>
